<UserControl x:Class="SIP_o_matic.Views.LadderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			xmlns:root="clr-namespace:SIP_o_matic"
             xmlns:views="clr-namespace:SIP_o_matic.Views"
			xmlns:viewModels="clr-namespace:SIP_o_matic.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
		<FontFamily x:Key="lcdFont2">pack://application:,,,/Fonts/#G7 Cube 5</FontFamily>
		<FontFamily x:Key="lcdFont">pack://application:,,,/Fonts/#Open 24 Display St</FontFamily>

		<SolidColorBrush x:Key="darkBrush" Color="#CC000000"/>
		<SolidColorBrush x:Key="lightBrush" Color="#CCFFFFFF"/>
		<SolidColorBrush x:Key="dialogColor" Color="Blue"/>
		<SolidColorBrush x:Key="transactionColor" Color="Green"/>
		<SolidColorBrush x:Key="messageColor" Color="GoldenRod"/>
		<SolidColorBrush x:Key="sessionColor" Color="Blue"/>
		<SolidColorBrush x:Key="lcdBackgroundBrush" Color="#B1CBC4"/>
		<SolidColorBrush x:Key="lcdForegroundBrush" Color="#1F2B22"/>

		<VisualBrush x:Key="audioBrush" 
		  TileMode="Tile" Viewport="0,0,10,10" 
		  ViewportUnits="Absolute" Viewbox="0,0,10,10" ViewboxUnits="Absolute">
			<VisualBrush.Visual>
				<Canvas>
					<Path StrokeThickness="1" Stroke="{StaticResource lcdForegroundBrush}" Data="M 1 4 L 1 6" />
					<Path StrokeThickness="1" Stroke="{StaticResource lcdForegroundBrush}" Data="M 3 3 L 3 7" />
					<Path StrokeThickness="1" Stroke="{StaticResource lcdForegroundBrush}" Data="M 5 0 L 5 10" />
					<Path StrokeThickness="1" Stroke="{StaticResource lcdForegroundBrush}" Data="M 7 3 L 7 7" />
					<Path StrokeThickness="1" Stroke="{StaticResource lcdForegroundBrush}" Data="M 9 4 L 9 6" />
				</Canvas>
			</VisualBrush.Visual>
		</VisualBrush>
		<VisualBrush x:Key="tickBrush" 
		  TileMode="Tile" Viewport="0,0,10,5" 
		  ViewportUnits="Absolute" Viewbox="0,0,10,5" ViewboxUnits="Absolute">
			<VisualBrush.Visual>
				<Canvas>
					<Path StrokeThickness="2" Stroke="{StaticResource darkBrush}" Data="M 0 0 L 0 5" />
					<Path StrokeThickness="1" Stroke="{StaticResource darkBrush}" Data="M 2 3 L 2 5" />
					<Path StrokeThickness="1" Stroke="{StaticResource darkBrush}" Data="M 4 3 L 4 5" />
					<Path StrokeThickness="1" Stroke="{StaticResource darkBrush}" Data="M 6 3 L 6 5" />
					<Path StrokeThickness="1" Stroke="{StaticResource darkBrush}" Data="M 8 3 L 8 5" />
				</Canvas>
			</VisualBrush.Visual>
		</VisualBrush>

		<Style x:Key="expandButtonStyle" TargetType="{x:Type ToggleButton}">
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Content" Value="&#x2BC6;"/>
				</Trigger>
			</Style.Triggers>
			<Setter Property="Content" Value="&#x2BC8;"/>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Top"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="orientedControlStyle" TargetType="{x:Type FrameworkElement}">
			<Style.Triggers>
				<Trigger Property="views:LadderPanel.IsInverted" Value="True">
					<Setter Property="HorizontalAlignment" Value="Right"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="timestampTextBoxStyle" BasedOn="{StaticResource orientedControlStyle}" TargetType="{x:Type TextBlock}">
			<Setter Property="FontFamily" Value="Bahnschrift SemiBold"/>
			<Setter Property="Foreground" Value="{StaticResource darkBrush}"/>
		</Style>
		<Style x:Key="displayTextBoxStyle" BasedOn="{StaticResource orientedControlStyle}" TargetType="{x:Type TextBlock}">
			<Setter Property="FontFamily" Value="Arial"/>
		</Style>

		<Style x:Key="statusImageStyle" TargetType="{x:Type Image}">
			<Setter Property="Source" Value="/Images/bullet_black.png"/>
			<Setter Property="Stretch" Value="None"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="ToolBar.ToolTip" Value="{Binding Status}"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Status}" Value="Undefined">
					<Setter Property="Source" Value="/Images/bullet_black.png"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Status}" Value="Success">
					<Setter Property="Source" Value="/Images/bullet_green.png"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Status}" Value="Redirected">
					<Setter Property="Source" Value="/Images/bullet_orange.png"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Status}" Value="Incomplete">
					<Setter Property="Source" Value="/Images/bullet_pink.png"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Status}" Value="Failed">
					<Setter Property="Source" Value="/Images/bullet_red.png"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<DataTemplate DataType="{x:Type viewModels:DialogEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<Image DockPanel.Dock="Right" Style="{StaticResource statusImageStyle}" />
				<TextBlock DockPanel.Dock="Right" Style="{StaticResource displayTextBoxStyle}" ToolTip="Retransmissions" Text="R" Margin="3,0,0,0"  Foreground="Orange" FontWeight="Bold" VerticalAlignment="Top" Visibility="{Binding HasRetransmissions,Converter={StaticResource booleanToVisibilityConverter}}"   />

				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" VerticalAlignment="Center" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="D" Margin="0,0,3,0" Foreground="{StaticResource dialogColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:TransactionEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<Image DockPanel.Dock="Right" Style="{StaticResource statusImageStyle}" />
				<TextBlock DockPanel.Dock="Right" Style="{StaticResource displayTextBoxStyle}" ToolTip="Retransmissions" Text="R" Margin="3,0,0,0"  Foreground="Orange" FontWeight="Bold" VerticalAlignment="Top" Visibility="{Binding HasRetransmissions,Converter={StaticResource booleanToVisibilityConverter}}"   />
				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="T" Margin="0,0,3,0" Foreground="{StaticResource transactionColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:SIPMessageEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<Image DockPanel.Dock="Right" Style="{StaticResource statusImageStyle}" />
				<Image DockPanel.Dock="Right" Stretch="None"  ToolTip="Body present" Visibility="{Binding HasBody,Converter={StaticResource booleanToVisibilityConverter}}" Source="/Images/attach.png"   />

				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="M" Margin="0,0,3,0" Foreground="{StaticResource messageColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:SessionEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding DialogEvent.EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding DialogEvent.EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<DockPanel DockPanel.Dock="Top">
					<Image DockPanel.Dock="Left" Source="/Images/sound_none.png"  Stretch="None" />
					<Border Background="{StaticResource audioBrush}" Height="10" VerticalAlignment="Center"/>
				</DockPanel>
				<DockPanel>
					<TextBlock DockPanel.Dock="Left" FontSize="16" FontFamily="{StaticResource lcdFont}" Text="{Binding Source}"/>
					<TextBlock DockPanel.Dock="Right" FontSize="16" FontFamily="{StaticResource lcdFont}" Text="{Binding Destination}"/>
					<TextBlock/>
				</DockPanel>
			</DockPanel>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModels:DialogViewModel}">
			<views:TransactionsView/>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:TransactionViewModel}">
			<views:SIPMessagesView/>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:RequestViewModel}">
			<views:SIPMessageTooltip/>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:ResponseViewModel}">
			<views:SIPMessageTooltip/>
		</DataTemplate>
	</UserControl.Resources>

	<UserControl.InputBindings>
		<KeyBinding Key="F5" Command="{x:Static root:RoutedCommands.Refresh}"/>
	</UserControl.InputBindings>

	<UserControl.CommandBindings>
		<CommandBinding Command="{x:Static root:RoutedCommands.Refresh}" CanExecute="RefreshCommandBinding_CanExecute" Executed="RefreshCommandBinding_Executed"/>
		<CommandBinding Command="{x:Static root:RoutedCommands.ZoomIn}" CanExecute="ZoomInCommandBinding_CanExecute" Executed="ZoomInCommandBinding_Executed"/>
		<CommandBinding Command="{x:Static root:RoutedCommands.ZoomOut}" CanExecute="ZoomOutCommandBinding_CanExecute" Executed="ZoomOutCommandBinding_Executed"/>
	</UserControl.CommandBindings>


	<DockPanel>
		<ToolBarTray DockPanel.Dock="Top">
			<ToolBar >
				<Button Command="{x:Static root:RoutedCommands.Refresh}" ToolTip="Refresh" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/arrow_refresh.png"  Stretch="None"/>
				</Button>
				<Button Command="{x:Static root:RoutedCommands.ZoomIn}" ToolTip="Zoom in" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/magnifier_zoom_in.png"  Stretch="None"/>
				</Button>
				<Button Command="{x:Static root:RoutedCommands.ZoomOut}" ToolTip="Zoom out" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/magifier_zoom_out.png"  Stretch="None"/>
				</Button>

			</ToolBar>
		</ToolBarTray>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="1*"/>
				<RowDefinition Height="5"/>
				<RowDefinition Height="200"/>
			</Grid.RowDefinitions>
			<views:LadderControl Grid.Row="0"
			
				ColumnWidth="200" ColumnPadding="100" Columns="{Binding Ladder.Devices}" Rows="{Binding Ladder.Events}" SelectedRow="{Binding Ladder.SelectedEvent}"
				VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RowDoubleClicked="LadderControl_RowDoubleClicked" >


				<views:LadderControl.HeaderTemplate>
					<DataTemplate>
						<Border BorderBrush="{StaticResource darkBrush}" Background="LightSlateGray" BorderThickness="1" Margin="5" Padding="5" CornerRadius="5" ToolTip="{Binding Name}">
							<Border.Effect>
								<DropShadowEffect ShadowDepth="5" Opacity="0.5"/>
							</Border.Effect>
							<TextBlock Text="{Binding Name}" Foreground="{StaticResource lightBrush}" TextAlignment="Center" FontFamily="Verdana" FontSize="14" />
						</Border>
					</DataTemplate>
				</views:LadderControl.HeaderTemplate>

				<views:LadderControl.ColumnTemplate>
					<DataTemplate>
						<Line X1="0" Y1="0" X2="0" Y2="50" Stretch="Fill" Stroke="DarkGray" StrokeDashArray="2, 3" StrokeThickness="2" />
					</DataTemplate>
				</views:LadderControl.ColumnTemplate>

				<views:LadderControl.RowContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Style.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="LightSteelBlue"/>
							</Trigger>
						</Style.Triggers>
						<Setter Property="ToolTip" Value="{Binding Data}"/>
						<Setter Property="HorizontalAlignment" Value="Stretch"/>
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						<Setter Property="views:LadderPanel.LeftColumn" Value="{Binding SourceDevice}"/>
						<Setter Property="views:LadderPanel.RightColumn" Value="{Binding DestinationDevice}"/>
						<Setter Property="Background" Value="WhiteSmoke"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<Border Margin="5" BorderThickness="1" Background="{TemplateBinding Background}" Padding="2">
										<Border.BorderBrush>
											<SolidColorBrush Color="{Binding BorderColor}" />
										</Border.BorderBrush>
										<ContentPresenter Content="{Binding}"/>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</views:LadderControl.RowContainerStyle>


			</views:LadderControl>
			<GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
			<TabControl Grid.Row="2" Background="Transparent">
				<TabItem Header="Sessions">
					<views:LadderControl
						ColumnWidth="300" ColumnPadding="150" Columns="{Binding Ladder.SessionTimestamps}" Rows="{Binding Ladder.SessionEvents}" 
						VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >


						<views:LadderControl.HeaderTemplate>
							<DataTemplate>
								<Border SnapsToDevicePixels="True" BorderBrush="{StaticResource darkBrush}" Background="LightSlateGray" BorderThickness="0,0,0,1" Margin="0" Padding="0"  ToolTip="{Binding Value,StringFormat=HH:mm:ss}">
									<StackPanel Margin="0,2,0,0">
										<TextBlock Text="{Binding Value,StringFormat=HH:mm:ss}" Foreground="{StaticResource lightBrush}" TextAlignment="Center" FontFamily="Verdana" FontSize="14" />
										<Border Height="5" Width="2" HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource darkBrush}"/>
									</StackPanel>
								</Border>
							</DataTemplate>
						</views:LadderControl.HeaderTemplate>

						<views:LadderControl.ColumnTemplate>
							<DataTemplate>
								<Line X1="0" Y1="0" X2="0" Y2="50" Stretch="Fill" Stroke="DarkGray" StrokeDashArray="2, 3" StrokeThickness="2" />
							</DataTemplate>
						</views:LadderControl.ColumnTemplate>

						<views:LadderControl.RowContainerStyle>
							<Style TargetType="{x:Type ListBoxItem}">
								<Style.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Background" Value="LightSteelBlue"/>
									</Trigger>
								</Style.Triggers>
								<Setter Property="HorizontalAlignment" Value="Stretch"/>
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="views:LadderPanel.LeftColumn" Value="{Binding StartTime}"/>
								<Setter Property="views:LadderPanel.RightColumn" Value="{Binding StopTime}"/>
								<Setter Property="Background" Value="{StaticResource lcdBackgroundBrush}"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ListBoxItem}">
											<Border Margin="5" BorderThickness="1" Background="{TemplateBinding Background}" Padding="2" BorderBrush="{StaticResource lcdForegroundBrush}">
												<ContentPresenter Content="{Binding}"/>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</views:LadderControl.RowContainerStyle>


					</views:LadderControl>

				</TabItem>
				<TabItem Header="Details">
					<ContentPresenter  Content="{Binding Ladder.SelectedEvent.Data}"/>
				</TabItem>

			</TabControl>
		</Grid>
	</DockPanel>

</UserControl>
