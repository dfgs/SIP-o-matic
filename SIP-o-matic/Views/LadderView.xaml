<UserControl x:Class="SIP_o_matic.Views.LadderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			xmlns:root="clr-namespace:SIP_o_matic"
             xmlns:views="clr-namespace:SIP_o_matic.Views"
			xmlns:viewModels="clr-namespace:SIP_o_matic.ViewModels"
			xmlns:data="clr-namespace:SIP_o_matic.Views.TestData"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		<SolidColorBrush x:Key="darkBrush" Color="#CC000000"/>
		<SolidColorBrush x:Key="lightBrush" Color="#CCFFFFFF"/>
		<SolidColorBrush x:Key="dialogColor" Color="Blue"/>
		<SolidColorBrush x:Key="transactionColor" Color="Green"/>
		<SolidColorBrush x:Key="messageColor" Color="GoldenRod"/>

		<Style x:Key="expandButtonStyle" TargetType="{x:Type ToggleButton}">
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Content" Value="&#x2BC6;"/>
				</Trigger>
			</Style.Triggers>
			<Setter Property="Content" Value="&#x2BC8;"/>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Top"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="orientedControlStyle" TargetType="{x:Type FrameworkElement}">
			<Style.Triggers>
				<Trigger Property="views:LadderPanel.IsInverted" Value="True">
					<Setter Property="HorizontalAlignment" Value="Right"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="timestampTextBoxStyle" BasedOn="{StaticResource orientedControlStyle}" TargetType="{x:Type TextBlock}">
			<Setter Property="FontFamily" Value="Bahnschrift SemiBold"/>
			<Setter Property="Foreground" Value="{StaticResource darkBrush}"/>
		</Style>
		<Style x:Key="displayTextBoxStyle" BasedOn="{StaticResource orientedControlStyle}" TargetType="{x:Type TextBlock}">
			<Setter Property="FontFamily" Value="Arial"/>
		</Style>

		<DataTemplate DataType="{x:Type viewModels:DialogEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" VerticalAlignment="Center" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="D" Margin="0,0,3,0" Foreground="{StaticResource dialogColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:TransactionEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="T" Margin="0,0,3,0" Foreground="{StaticResource transactionColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
		<DataTemplate DataType="{x:Type viewModels:SIPMessageEventViewModel}">
			<DockPanel>
				<Border DockPanel.Dock="Left" Width="5" Margin="0,0,5,0" >
					<Border.Background>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.Background>
					<Border.BorderBrush>
						<SolidColorBrush Color="{Binding EventColor}"/>
					</Border.BorderBrush>
				</Border>
				<StackPanel>
					<TextBlock Style="{StaticResource timestampTextBoxStyle}" Text="{Binding Timestamp,StringFormat='HH:mm:ss:fff'}" />
					<StackPanel Orientation="Horizontal" Style="{StaticResource orientedControlStyle}">
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="M" Margin="0,0,3,0" Foreground="{StaticResource messageColor}" FontWeight="Bold"  />
						<TextBlock Style="{StaticResource displayTextBoxStyle}" Text="{Binding Display}" FontFamily="Arial"/>
					</StackPanel>
					<views:ArrowView Height="10"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>

	</UserControl.Resources>

	<UserControl.InputBindings>
		<KeyBinding Key="F5" Command="{x:Static root:RoutedCommands.Refresh}"/>
	</UserControl.InputBindings>

	<UserControl.CommandBindings>
		<CommandBinding Command="{x:Static root:RoutedCommands.Refresh}" CanExecute="RefreshCommandBinding_CanExecute" Executed="RefreshCommandBinding_Executed"/>
		<CommandBinding Command="{x:Static root:RoutedCommands.ZoomIn}" CanExecute="ZoomInCommandBinding_CanExecute" Executed="ZoomInCommandBinding_Executed"/>
		<CommandBinding Command="{x:Static root:RoutedCommands.ZoomOut}" CanExecute="ZoomOutCommandBinding_CanExecute" Executed="ZoomOutCommandBinding_Executed"/>
	</UserControl.CommandBindings>


	<DockPanel>
		<ToolBarTray DockPanel.Dock="Top">
			<ToolBar >
				<Button Command="{x:Static root:RoutedCommands.Refresh}" ToolTip="Refresh" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/arrow_refresh.png"  Stretch="None"/>
				</Button>
				<Button Command="{x:Static root:RoutedCommands.ZoomIn}" ToolTip="Zoom in" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/magnifier_zoom_in.png"  Stretch="None"/>
				</Button>
				<Button Command="{x:Static root:RoutedCommands.ZoomOut}" ToolTip="Zoom out" ToolTipService.ShowOnDisabled="true">
					<Image Source="/Images/magifier_zoom_out.png"  Stretch="None"/>
				</Button>

			</ToolBar>
		</ToolBarTray>

		<views:LadderControl
			
			ColumnWidth="200" ColumnPadding="100" Columns="{Binding Ladder.Devices}" Rows="{Binding Ladder.Events}" SelectedRow="{Binding Ladder.SelectedEvent}"
			VerticalAlignment="Top" HorizontalAlignment="Left" RowDoubleClicked="LadderControl_RowDoubleClicked" >

			
			<views:LadderControl.HeaderTemplate>
				<DataTemplate>
					<Border BorderBrush="{StaticResource darkBrush}" Background="LightSlateGray" BorderThickness="1" Margin="5" Padding="5" CornerRadius="5">
						<Border.Effect>
							<DropShadowEffect ShadowDepth="5" Opacity="0.5"/>
						</Border.Effect>
						<TextBlock Text="{Binding Name}" Foreground="{StaticResource lightBrush}" TextAlignment="Center" FontFamily="Verdana" FontSize="14" />
					</Border>
				</DataTemplate>
			</views:LadderControl.HeaderTemplate>

			<views:LadderControl.ColumnTemplate>
				<DataTemplate>
					<Line X1="0" Y1="0" X2="0" Y2="50" Stretch="Fill" Stroke="DarkGray" StrokeDashArray="2, 3" StrokeThickness="2" />
				</DataTemplate>
			</views:LadderControl.ColumnTemplate>

			<views:LadderControl.RowContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Style.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="LightSteelBlue"/>
						</Trigger>
					</Style.Triggers>
					<Setter Property="HorizontalAlignment" Value="Stretch"/>
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="views:LadderPanel.LeftColumn" Value="{Binding SourceDevice}"/>
					<Setter Property="views:LadderPanel.RightColumn" Value="{Binding DestinationDevice}"/>
					<Setter Property="Background" Value="WhiteSmoke"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border Margin="5" BorderThickness="1" Background="{TemplateBinding Background}" Padding="2">
									<Border.BorderBrush>
										<SolidColorBrush Color="{Binding BorderColor}" />
									</Border.BorderBrush>
									<ContentPresenter Content="{Binding}"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</views:LadderControl.RowContainerStyle>


		</views:LadderControl>
	</DockPanel>

</UserControl>
